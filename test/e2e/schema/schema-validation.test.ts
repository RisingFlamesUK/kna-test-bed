// test/e2e/schema/prompt-map.schema.test.ts
import * as fs from 'node:fs';
import * as path from 'node:path';
import { runSchemaTestsFromFile } from './_runner/schema-runner.ts';
import { getPreReleaseVersion } from '../../../suite/components/pre-release.ts';

/**
 * Helper to pick the first existing path from a list
 */
function pickExisting(paths: string[]): string | undefined {
  for (const p of paths) {
    if (fs.existsSync(p)) return p;
  }
  return undefined;
}

const schemaRoot = 'test/e2e/schema';
const pre = getPreReleaseVersion()?.trim();

let CONFIG_PATH = process.env.SCHEMA_CONFIG;

if (!CONFIG_PATH && pre) {
  // Try pre-release-specific config
  const candidates = [path.posix.join(schemaRoot, `pre-release-tests/${pre}/config/tests.json`)];
  CONFIG_PATH = pickExisting(candidates);
}

if (!CONFIG_PATH) {
  // Fall back to default config
  CONFIG_PATH = path.posix.join(schemaRoot, 'config/tests.json');
}

// vitest registers describes/its generated by the runner at import time
await runSchemaTestsFromFile(CONFIG_PATH);
