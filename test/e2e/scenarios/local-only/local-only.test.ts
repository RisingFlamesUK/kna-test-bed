// test/e2e/scenarios/local-only/local-only.test.ts
import fs from 'fs';
import path from 'path';
import { runScenariosFromFile } from '../_runner/scenario-runner.ts';
import { getPreReleaseVersion } from '../../../../suite/components/pre-release.ts';

function pickExisting(paths: string[]): string | undefined {
  for (const p of paths) {
    if (fs.existsSync(p)) return p;
  }
  return undefined;
}

const scenarioRoot = 'test/e2e/scenarios/local-only';
const pre = (getPreReleaseVersion() || '').trim();

let CONFIG_PATH = process.env.SCENARIO_CONFIG;

if (!CONFIG_PATH && pre) {
  // Try only the recommended convention
  const candidates = [path.posix.join(scenarioRoot, `pre-release-tests/${pre}/config/tests.json`)];
  CONFIG_PATH = pickExisting(candidates);
}

if (!CONFIG_PATH) {
  CONFIG_PATH = path.posix.join(scenarioRoot, 'config/tests.json');
}

// vitest registers describes/its generated by the runner at import time
await runScenariosFromFile(CONFIG_PATH);
